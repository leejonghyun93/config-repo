spring:
  application:
    name: user-service

  # Bean 중복 허용 설정 추가 (중요!)
  main:
    allow-bean-definition-overriding: true

  # 운영환경 데이터베이스는 공통 설정에서 가져옴
  datasource:
    url: ${PROD_DB_URL}
    username: ${PROD_DB_USERNAME}
    password: ${PROD_DB_PASSWORD}
    driver-class-name: org.mariadb.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.MariaDBDialect

  redis:
    host: ${PROD_REDIS_HOST}
    port: ${PROD_REDIS_PORT:6379}
    password: ${PROD_REDIS_PASSWORD}
    timeout: 3000ms
    lettuce:
      pool:
        max-active: 20
        max-idle: 10
        min-idle: 2
        max-wait: 1000ms

  kafka:
    bootstrap-servers: ${PROD_KAFKA_SERVERS}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      enable-idempotence: true
      batch-size: 16384
      linger-ms: 5
    consumer:
      group-id: user-service-group-prod
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      session-timeout: 30000
      heartbeat-interval: 10000
      properties:
        spring.json.trusted.packages: "org.kosa.userservice.dto"

server:
  port: 8103

# MyBatis 설정
mybatis:
  mapper-locations: classpath*:mapper/*.xml
  type-aliases-package: org.kosa.userservice.dto.board
  configuration:
    map-underscore-to-camel-case: true

# Kafka 토픽 설정
kafka:
  topic:
    user-withdrawal: ${PROD_KAFKA_TOPIC_USER_WITHDRAWAL:user-withdrawal-topic-prod}

# Auth Service 설정
auth-service:
  url: ${PROD_AUTH_SERVICE_URL:http://auth-service}

logging:
  level:
    org.kosa.userservice: INFO
    org.springframework.kafka: WARN
    org.apache.kafka: ERROR
    org.mybatis: WARN

# Eureka 클라이언트 설정 추가
eureka:
  client:
    service-url:
      defaultZone: ${PROD_EUREKA_SERVER_URL:http://eureka-service:8761/eureka}
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30

# Circuit Breaker 설정 추가 (중요!)
resilience4j:
  circuitbreaker:
    instances:
      auth-service:
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 30s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true

  retry:
    instances:
      auth-service:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2

# 모니터링 설정
management:
  endpoints:
    web:
      exposure:
        include: health,circuitbreakers,circuitbreakerevents,retries
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
