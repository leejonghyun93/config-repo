spring:
  # Redis ÏÑ§Ï†ï Ï∂îÍ∞Ä
  redis:
    host: ${REDIS_HOST:redis-cluster}
    port: ${REDIS_PORT:6379}
    timeout: 3000ms
    lettuce:
      pool:
        max-active: 20
        max-idle: 10
        min-idle: 2
        max-wait: 1000ms

  # Kafka ÏÑ§Ï†ï (Í∏∞Ï°¥ user-service)
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka-cluster:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      enable-idempotence: true
      batch-size: 16384
      linger-ms: 5
    consumer:
      group-id: user-service-group-prod
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      session-timeout: 30000
      heartbeat-interval: 10000
      properties:
        spring.json.trusted.packages: "org.kosa.userservice.dto"

# MyBatis ÏÑ§Ï†ï Ï∂îÍ∞Ä (board Í∏∞Îä•Ïö©)
mybatis:
  mapper-locations: classpath*:mapper/*.xml
  type-aliases-package: org.kosa.userservice.dto.board # Ìå®ÌÇ§ÏßÄÎ™Ö Î≥ÄÍ≤Ω
  configuration:
    map-underscore-to-camel-case: true

# Kafka ÌÜ†ÌîΩ ÏÑ§Ï†ï (Í∏∞Ï°¥ user-service ÏÑ§Ï†ï)
kafka:
  topic:
    user-withdrawal: ${KAFKA_TOPIC_USER_WITHDRAWAL:user-withdrawal-topic-prod}

# Auth Service ÏÑ§Ï†ï (Í∏∞Ï°¥ user-serviceÏóêÏÑú ÏÇ¨Ïö©)
auth-service:
  url: ${AUTH_SERVICE_URL:http://auth-service}

# Î°úÍπÖ ÏÑ§Ï†ï (user + board ÌÜµÌï©)
logging:
  level:
    org.kosa.userservice: INFO
    org.springframework.kafka: WARN
    org.apache.kafka: ERROR
    org.mybatis: WARN # üî• MyBatis Î°úÍπÖ Ï∂îÍ∞Ä
