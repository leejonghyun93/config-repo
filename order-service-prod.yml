# 통합된 Order Service 운영환경 설정
spring:
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka-cluster:9092}
    consumer:
      group-id: order-service-group-prod
      auto-offset-reset: earliest
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        session.timeout.ms: 30000
        heartbeat.interval.ms: 10000
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      retries: 3
      acks: all

# Kafka 토픽 설정 (운영환경)
kafka:
  topic:
    user-withdrawal: ${KAFKA_TOPIC_USER_WITHDRAWAL:user-withdrawal-topic-prod}

# Feign Client 설정 (Payment 기능)
feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 10000
        loggerLevel: basic
  circuitbreaker:
    enabled: true

# 🔥 아임포트 운영환경 설정 (Payment 기능)
iamport:
  api-key: ${IAMPORT_API_KEY}
  api-secret: ${IAMPORT_API_SECRET}

# 🔥 PG 운영환경 설정 (Payment 기능)
payment:
  test:
    enabled: false
    mode: production

  providers:
    kakaopay:
      enabled: true
      active: true
      name: "카카오페이"
      pg-code: "kakaopay"
      test-mode: false
      merchant-id: ${KAKAOPAY_MERCHANT_ID}

    inicis:
      enabled: ${INICIS_ENABLED:false}
      active: false
      name: "이니시스"
      pg-code: "html5_inicis"
      test-mode: false
      merchant-id: ${INICIS_MERCHANT_ID}

  methods:
    card:
      enabled: true
      name: "신용카드"
    trans:
      enabled: true
      name: "실시간계좌이체"
    vbank:
      enabled: true
      name: "가상계좌"
    phone:
      enabled: ${PHONE_PAYMENT_ENABLED:false}
      name: "휴대폰소액결제"

# 외부 서비스 URL 설정 (운영환경)
user-service:
  url: ${USER_SERVICE_URL:http://user-service}

# 🔥 Product Service URL (Cart 기능에서 사용)
product-service:
  url: ${PRODUCT_SERVICE_URL:http://product-service}

# 상세 API URL 설정
user-service-detail-url: ${USER_SERVICE_DETAIL_URL:http://user-service/api/users}

# 로깅 설정 (운영환경)
logging:
  level:
    org.springframework.kafka: WARN
    org.kosa.orderservice.service: INFO
    org.kosa.orderservice.cart: INFO
    org.kosa.orderservice.payment: INFO
    com.siot.IamportRestClient: WARN
    org.springframework.cloud.openfeign: WARN
    root: WARN
jwt:
  secret-key: "verySecretKeyThatIsAtLeast32BytesLong1234"
