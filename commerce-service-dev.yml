spring:
  application:
    name: commerce-service

  datasource:
    # url: jdbc:mariadb://192.168.4.48:3306/shopmall
    # username: root
    # password: 1004
    # driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://localhost:3306/shopmalls?useSSL=false&allowPublicKeyRetrieval=true&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
    username: kosa
    password: 1004
    driver-class-name: org.mariadb.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 600000
      max-lifetime: 1800000

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MariaDBDialect
        format_sql: true
        use_sql_comments: true
    open-in-view: false

  redis:
    host: ${DEV_REDIS_HOST:localhost}
    port: ${DEV_REDIS_PORT:6379}
    password: ${DEV_REDIS_PASSWORD:}
    timeout: 2000ms
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms

  cache:
    type: redis
    redis:
      time-to-live: 600000
      cache-null-values: false

  kafka:
    bootstrap-servers: ${DEV_KAFKA_SERVERS:kafka:9092}
    consumer:
      group-id: commerce-service-group
      auto-offset-reset: earliest
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

server:
  port: 8090
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

springdoc:
  api-docs:
    path: /v3/api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true

kafka:
  topic:
    user-withdrawal: user-withdrawal-topic

feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 10000
        loggerLevel: basic
  circuitbreaker:
    enabled: true

# 아임포트 설정 (개발환경 - 테스트 키)
iamport:
  api-key: ${DEV_IAMPORT_API_KEY:test_api_key}
  api-secret: ${DEV_IAMPORT_API_SECRET:test_api_secret}

payment:
  test:
    enabled: true
    mode: development
  providers:
    kakaopay:
      enabled: true
      active: true
      name: "카카오페이"
      pg-code: "kakaopay"
      test-mode: false

app:
  icon:
    base-url: /icons

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,cache
  endpoint:
    health:
      show-details: when_authorized

info:
  app:
    name: ${spring.application.name}
    description: 통합된 커머스 서비스
    version: 1.0.0

user-service:
  url: http://user-service:8096

user-service-detail-url: http://user-service:8096/api/users

jwt:
  secret: ${DEV_JWT_SECRET_KEY:rrYd2zPDUkx7BUhgDsOTxHCbsBkeTgE/uoARWYSqBjU=}

image:
  upload:
    path: ./dev-uploads/images/
    max-file-size: 10MB
    max-request-size: 10MB
  base-url: http://localhost:8090/api/images/products/

logging:
  level:
    com.yourcompany.productcatalog: DEBUG
    org.kosa.categoryservice: DEBUG
    org.kosa.productservice: DEBUG
    org.kosa.imageservice: DEBUG
    org.springframework.cache: DEBUG
    org.springframework.kafka: INFO
    org.apache.kafka: WARN
